% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/LFConsensus.R
\name{lf.consensus}
\alias{lf.consensus}
\title{Lancichinetti and Fortunato Consensus Clustering using base algorithms from iGraph}
\usage{
lf.consensus(
  adjMat,
  np = 20,
  threshold = 0.5,
  alg = "louvain",
  maxIter = 100,
  ...
)
}
\arguments{
\item{adjMat}{A square, symmetric adjacency matrix representing the network, with edge weights between nodes.}

\item{np}{Integer. The number of partitions to generate in each iteration (default is 20).}

\item{threshold}{Numeric. A threshold for filtering edges; values below this are set to zero (default is 0.2).}

\item{alg}{Character. The community detection algorithm to use, with 'louvain' as the default.
The algorithm should be compatible with the \code{igraph} package, ie. \code{cluster_}alg.}

\item{maxIter}{Integer. The maximum number of iterations to achieve consensus (default is 100).}

\item{...}{Additional arguments passed to the community detection algorithm specified in \code{alg}.}
}
\value{
A vector indicating the final partition for each node, with nodes in the same community
assigned the same value.
}
\description{
This function performs L-F consensus clustering on a weighted adjacency matrix using
a specified community detection algorithm (default is 'louvain'). The function iterates
until a consensus partition is achieved or a maximum number of iterations is reached.
}
\details{
Based on ``Consensus clustering in complex networks'', Lancichinetti & Fortunato, 2012.

The function iteratively applies the clustering algorithm and adjusts the adjacency matrix
until consensus is reached across partitions or \code{maxIter} iterations are completed.
}
